// Generated by Haxe 4.1.5
#ifndef INCLUDED_options_MiscSub
#define INCLUDED_options_MiscSub

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(options,MiscSub)

namespace options{


class HXCPP_CLASS_ATTRIBUTES MiscSub_obj : public  ::flixel::FlxSubState_obj
{
	public:
		typedef  ::flixel::FlxSubState_obj super;
		typedef MiscSub_obj OBJ_;
		MiscSub_obj();

	public:
		enum { _hx_ClassId = 0x2dae9ab6 };

		void __construct( ::Dynamic BGColor);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="options.MiscSub")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"options.MiscSub"); }
		static ::hx::ObjectPtr< MiscSub_obj > __new( ::Dynamic BGColor);
		static ::hx::ObjectPtr< MiscSub_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic BGColor);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MiscSub_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MiscSub",d4,d1,31,f6); }

};

} // end namespace options

#endif /* INCLUDED_options_MiscSub */ 
