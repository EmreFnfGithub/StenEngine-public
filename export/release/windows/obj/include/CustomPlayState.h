// Generated by Haxe 4.1.5
#ifndef INCLUDED_CustomPlayState
#define INCLUDED_CustomPlayState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
HX_DECLARE_CLASS0(Character)
HX_DECLARE_CLASS0(CustomPlayState)
HX_DECLARE_CLASS0(MusicBeatState)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,IFlxBasic)
HX_DECLARE_CLASS1(flixel,IFlxSprite)
HX_DECLARE_CLASS3(flixel,addons,transition,FlxTransitionableState)
HX_DECLARE_CLASS3(flixel,addons,transition,TransitionData)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxInputText)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUIInputText)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUIState)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IEventGetter)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIState)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIWidget)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IHasParams)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IResizable)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,ui,FlxButton)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_text_FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES CustomPlayState_obj : public  ::MusicBeatState_obj
{
	public:
		typedef  ::MusicBeatState_obj super;
		typedef CustomPlayState_obj OBJ_;
		CustomPlayState_obj();

	public:
		enum { _hx_ClassId = 0x196039c8 };

		void __construct( ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CustomPlayState")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"CustomPlayState"); }
		static ::hx::ObjectPtr< CustomPlayState_obj > __new( ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut);
		static ::hx::ObjectPtr< CustomPlayState_obj > __alloc(::hx::Ctx *_hx_ctx, ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CustomPlayState_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CustomPlayState",6c,05,30,1e); }

		::String stagepath;
		 ::Character char1;
		 ::Character char2;
		 ::Character char3;
		 ::Character charnew;
		::String charselect;
		::String charselect2;
		 ::flixel::addons::ui::FlxUIInputText eventName;
		 ::flixel::addons::ui::FlxUIInputText eventNamee;
		 ::flixel::addons::ui::FlxUIInputText eventNameEE;
		 ::flixel::addons::ui::FlxUIInputText eventNameEEe;
		 ::flixel::ui::FlxButton button;
		 ::flixel::addons::ui::FlxUIInputText eventName2;
		 ::flixel::addons::ui::FlxUIInputText eventName3;
		 ::flixel::ui::FlxButton button2;
		 ::flixel::ui::FlxButton button3;
		 ::flixel::ui::FlxButton button4;
		 ::flixel::ui::FlxButton button5;
		 ::flixel::ui::FlxButton button6;
		 ::flixel::ui::FlxButton button7;
		 ::flixel::ui::FlxButton button8;
		 ::flixel::addons::ui::FlxUIInputText songChange;
		 ::flixel::text::FlxText versionShit;
		 ::flixel::FlxSprite bg;
		 ::flixel::FlxSprite bg2;
		 ::flixel::FlxSprite front;
		void create();

		void nullFunction();
		::Dynamic nullFunction_dyn();

		void PasteFunction();
		::Dynamic PasteFunction_dyn();

		void update(Float elapsed);

};


#endif /* INCLUDED_CustomPlayState */ 
