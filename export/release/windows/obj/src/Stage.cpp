// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_BackgroundDancer
#include <BackgroundDancer.h>
#endif
#ifndef INCLUDED_BackgroundGirls
#include <BackgroundGirls.h>
#endif
#ifndef INCLUDED_Boyfriend
#include <Boyfriend.h>
#endif
#ifndef INCLUDED_Character
#include <Character.h>
#endif
#ifndef INCLUDED_Conductor
#include <Conductor.h>
#endif
#ifndef INCLUDED_CoolUtil
#include <CoolUtil.h>
#endif
#ifndef INCLUDED_GameplayCustomizeState
#include <GameplayCustomizeState.h>
#endif
#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_PlayState
#include <PlayState.h>
#endif
#ifndef INCLUDED_PlayStateChangeables
#include <PlayStateChangeables.h>
#endif
#ifndef INCLUDED_Stage
#include <Stage.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_effects_chainable_FlxWaveDirection
#include <flixel/addons/effects/chainable/FlxWaveDirection.h>
#endif
#ifndef INCLUDED_flixel_addons_effects_chainable_FlxWaveEffect
#include <flixel/addons/effects/chainable/FlxWaveEffect.h>
#endif
#ifndef INCLUDED_flixel_addons_effects_chainable_FlxWaveMode
#include <flixel/addons/effects/chainable/FlxWaveMode.h>
#endif
#ifndef INCLUDED_flixel_addons_effects_chainable_IFlxEffect
#include <flixel/addons/effects/chainable/IFlxEffect.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionData
#include <flixel/addons/transition/TransitionData.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7b29f2b73a08853e_13_new,"Stage","new",0x85b92290,"Stage.new","Stage.hx",13,0xbcde5ee0)
static const int _hx_array_data_1738da9e_2[] = {
	(int)100,(int)300,
};
static const int _hx_array_data_1738da9e_3[] = {
	(int)100,(int)200,
};
static const int _hx_array_data_1738da9e_4[] = {
	(int)100,(int)400,
};
static const int _hx_array_data_1738da9e_5[] = {
	(int)1030,(int)230,
};
static const int _hx_array_data_1738da9e_6[] = {
	(int)970,(int)450,
};
static const int _hx_array_data_1738da9e_7[] = {
	(int)-400,(int)100,
};
static const int _hx_array_data_1738da9e_8[] = {
	(int)1090,(int)450,
};
static const int _hx_array_data_1738da9e_9[] = {
	(int)100,(int)150,
};
static const int _hx_array_data_1738da9e_10[] = {
	(int)580,(int)430,
};
static const int _hx_array_data_1738da9e_11[] = {
	(int)970,(int)670,
};
static const int _hx_array_data_1738da9e_12[] = {
	(int)250,(int)460,
};
static const int _hx_array_data_1738da9e_13[] = {
	(int)250,(int)460,
};
static const int _hx_array_data_1738da9e_14[] = {
	(int)580,(int)430,
};
static const int _hx_array_data_1738da9e_15[] = {
	(int)970,(int)670,
};
static const int _hx_array_data_1738da9e_16[] = {
	(int)-50,(int)200,
};
static const int _hx_array_data_1738da9e_17[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,(int)15,(int)16,(int)17,(int)18,
};
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_754_update,"Stage","update",0x01f9b1d9,"Stage.update","Stage.hx",754,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_778_stepHit,"Stage","stepHit",0x9bf3d897,"Stage.stepHit","Stage.hx",778,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_795_stepHit,"Stage","stepHit",0x9bf3d897,"Stage.stepHit","Stage.hx",795,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_816_beatHit,"Stage","beatHit",0x8eb714ad,"Stage.beatHit","Stage.hx",816,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_848_beatHit,"Stage","beatHit",0x8eb714ad,"Stage.beatHit","Stage.hx",848,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_865_beatHit,"Stage","beatHit",0x8eb714ad,"Stage.beatHit","Stage.hx",865,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_894_lightningStrikeShit,"Stage","lightningStrikeShit",0xc7dd82ec,"Stage.lightningStrikeShit","Stage.hx",894,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_923_trainStart,"Stage","trainStart",0xe162ef4a,"Stage.trainStart","Stage.hx",923,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_934_updateTrainPos,"Stage","updateTrainPos",0xaaf47da5,"Stage.updateTrainPos","Stage.hx",934,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_968_trainReset,"Stage","trainReset",0x441fc4b7,"Stage.trainReset","Stage.hx",968,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_989_resetFastCar,"Stage","resetFastCar",0x5e552099,"Stage.resetFastCar","Stage.hx",989,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_1001_fastCarDrive,"Stage","fastCarDrive",0xcd297ee2,"Stage.fastCarDrive","Stage.hx",1001,0xbcde5ee0)
HX_LOCAL_STACK_FRAME(_hx_pos_7b29f2b73a08853e_1011_fastCarDrive,"Stage","fastCarDrive",0xcd297ee2,"Stage.fastCarDrive","Stage.hx",1011,0xbcde5ee0)

void Stage_obj::__construct(::String daStage){
            	HX_GC_STACKFRAME(&_hx_pos_7b29f2b73a08853e_13_new)
HXLINE( 985)		this->fastCarCanDrive = true;
HXLINE( 930)		this->startedMoving = false;
HXLINE( 918)		this->trainCooldown = 0;
HXLINE( 917)		this->trainFinishing = false;
HXLINE( 916)		this->trainCars = 8;
HXLINE( 914)		this->trainFrameTiming = ((Float)0);
HXLINE( 913)		this->trainMoving = false;
HXLINE( 891)		this->curLight = 0;
HXLINE( 890)		this->lightningOffset = 8;
HXLINE( 889)		this->lightningStrikeBeat = 0;
HXLINE(  33)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  33)		{
HXLINE(  35)			 ::haxe::ds::StringMap _g1 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  35)			_g1->set(HX_("spooky",eb,bd,9e,c1),::Array_obj< int >::fromData( _hx_array_data_1738da9e_2,2));
HXDLIN(  35)			_g1->set(HX_("monster",1a,54,b0,b8),::Array_obj< int >::fromData( _hx_array_data_1738da9e_3,2));
HXLINE(  33)			_g->set(HX_("halloween",8d,bb,38,50),_g1);
            		}
HXDLIN(  33)		{
HXLINE(  36)			 ::haxe::ds::StringMap _g2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  36)			_g2->set(HX_("pico",e5,e8,57,4a),::Array_obj< int >::fromData( _hx_array_data_1738da9e_4,2));
HXLINE(  33)			_g->set(HX_("philly",28,77,5e,ef),_g2);
            		}
HXDLIN(  33)		{
HXLINE(  37)			 ::haxe::ds::StringMap _g3 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  37)			_g3->set(HX_("bf-car",cb,95,e2,07),::Array_obj< int >::fromData( _hx_array_data_1738da9e_5,2));
HXLINE(  33)			_g->set(HX_("limo",1f,17,b3,47),_g3);
            		}
HXDLIN(  33)		{
HXLINE(  38)			 ::haxe::ds::StringMap _g4 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  38)			_g4->set(HX_("bf-christmas",79,02,f4,24),::Array_obj< int >::fromData( _hx_array_data_1738da9e_6,2));
HXDLIN(  38)			_g4->set(HX_("parents-christmas",fe,94,c5,32),::Array_obj< int >::fromData( _hx_array_data_1738da9e_7,2));
HXLINE(  33)			_g->set(HX_("mall",d4,3a,56,48),_g4);
            		}
HXDLIN(  33)		{
HXLINE(  39)			 ::haxe::ds::StringMap _g5 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  39)			_g5->set(HX_("bf-christmas",79,02,f4,24),::Array_obj< int >::fromData( _hx_array_data_1738da9e_8,2));
HXDLIN(  39)			_g5->set(HX_("monster-christmas",4f,88,85,27),::Array_obj< int >::fromData( _hx_array_data_1738da9e_9,2));
HXLINE(  33)			_g->set(HX_("mallEvil",88,d3,e3,a7),_g5);
            		}
HXDLIN(  33)		{
HXLINE(  40)			 ::haxe::ds::StringMap _g6 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  40)			_g6->set(HX_("gf-pixel",98,3e,8c,55),::Array_obj< int >::fromData( _hx_array_data_1738da9e_10,2));
HXDLIN(  40)			_g6->set(HX_("bf-pixel",fd,03,90,37),::Array_obj< int >::fromData( _hx_array_data_1738da9e_11,2));
HXDLIN(  40)			_g6->set(HX_("senpai",3c,df,8d,6b),::Array_obj< int >::fromData( _hx_array_data_1738da9e_12,2));
HXDLIN(  40)			_g6->set(HX_("senpai-angry",10,7a,b8,25),::Array_obj< int >::fromData( _hx_array_data_1738da9e_13,2));
HXLINE(  33)			_g->set(HX_("school",74,b8,c8,40),_g6);
            		}
HXDLIN(  33)		{
HXLINE(  46)			 ::haxe::ds::StringMap _g7 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  46)			_g7->set(HX_("gf-pixel",98,3e,8c,55),::Array_obj< int >::fromData( _hx_array_data_1738da9e_14,2));
HXDLIN(  46)			_g7->set(HX_("bf-pixel",fd,03,90,37),::Array_obj< int >::fromData( _hx_array_data_1738da9e_15,2));
HXDLIN(  46)			_g7->set(HX_("spirit",31,bb,a9,bd),::Array_obj< int >::fromData( _hx_array_data_1738da9e_16,2));
HXLINE(  33)			_g->set(HX_("schoolEvil",28,a1,f5,f7),_g7);
            		}
HXDLIN(  33)		this->positions = _g;
HXLINE(  28)		this->slowBacks =  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
HXLINE(  26)		this->layInFront = ::Array_obj< ::Dynamic>::__new(3)->init(0,::Array_obj< ::Dynamic>::__new(0))->init(1,::Array_obj< ::Dynamic>::__new(0))->init(2,::Array_obj< ::Dynamic>::__new(0));
HXLINE(  25)		this->animatedBacks = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  24)		this->swagGroup =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  23)		this->swagBacks =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  20)		this->toAdd = ::cpp::VirtualArray_obj::__new(0);
HXLINE(  19)		this->tweenDuration = ((Float)2);
HXLINE(  17)		this->hideLastBG = false;
HXLINE(  15)		this->curStage = HX_("",00,00,00,00);
HXLINE(  51)		super::__construct(null(),null());
HXLINE(  52)		this->curStage = daStage;
HXLINE(  53)		this->camZoom = ((Float)1.05);
HXLINE(  54)		if (::PlayStateChangeables_obj::Optimize) {
HXLINE(  55)			return;
            		}
HXLINE(  57)		::String _hx_switch_0 = daStage;
            		if (  (_hx_switch_0==HX_("halloween",8d,bb,38,50)) ){
HXLINE(  61)			 ::flixel::graphics::frames::FlxAtlasFrames hallowTex = ::Paths_obj::getSparrowAtlas(HX_("halloween_bg",77,a6,29,9b),HX_("week2",be,95,be,c7),null());
HXLINE(  63)			 ::flixel::FlxSprite halloweenBG =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,-80,null());
HXLINE(  64)			halloweenBG->set_frames(hallowTex);
HXLINE(  65)			halloweenBG->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("halloweem bg0",37,fc,3c,6c),null(),null(),null(),null());
HXLINE(  66)			halloweenBG->animation->addByPrefix(HX_("lightning",0a,39,4a,d7),HX_("halloweem bg lightning strike",af,54,50,5b),24,false,null(),null());
HXLINE(  67)			halloweenBG->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE(  68)			halloweenBG->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE(  69)			this->swagBacks->set(HX_("halloweenBG",92,b2,88,5c),halloweenBG);
HXLINE(  70)			this->toAdd->push(halloweenBG);
HXLINE(  60)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("limo",1f,17,b3,47)) ){
HXLINE( 126)			this->camZoom = ((Float)0.90);
HXLINE( 128)			 ::flixel::FlxSprite skyBG =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,-50,null());
HXDLIN( 128)			 ::flixel::FlxSprite skyBG1 = skyBG->loadGraphic(::Paths_obj::loadImage(HX_("limo/limoSunset",45,de,4f,6e),HX_("week4",c0,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 129)			skyBG1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 130)			skyBG1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 131)			this->swagBacks->set(HX_("skyBG",e6,94,2a,7e),skyBG1);
HXLINE( 132)			this->toAdd->push(skyBG1);
HXLINE( 134)			 ::flixel::FlxSprite bgLimo =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,480,null());
HXLINE( 135)			bgLimo->set_frames(::Paths_obj::getSparrowAtlas(HX_("limo/bgLimo",b4,c7,45,2c),HX_("week4",c0,95,be,c7),null()));
HXLINE( 136)			bgLimo->animation->addByPrefix(HX_("drive",0a,69,bc,df),HX_("background limo pink",65,40,fe,9c),24,null(),null(),null());
HXLINE( 137)			bgLimo->animation->play(HX_("drive",0a,69,bc,df),null(),null(),null());
HXLINE( 138)			bgLimo->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 139)			bgLimo->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 140)			this->swagBacks->set(HX_("bgLimo",84,5f,cb,af),bgLimo);
HXLINE( 141)			this->toAdd->push(bgLimo);
HXLINE( 144)			 ::flixel::FlxSprite fastCar =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-300,160,null());
HXLINE( 143)			 ::flixel::FlxSprite fastCar1 = fastCar->loadGraphic(::Paths_obj::loadImage(HX_("limo/fastCarLol",c1,b0,ed,94),HX_("week4",c0,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 145)			fastCar1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 146)			fastCar1->set_visible(false);
HXLINE( 148)			if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 150)				 ::flixel::group::FlxTypedGroup grpLimoDancers =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE( 151)				this->swagGroup->set(HX_("grpLimoDancers",70,18,93,51),grpLimoDancers);
HXLINE( 152)				this->toAdd->push(grpLimoDancers);
HXLINE( 154)				{
HXLINE( 155)					{
HXLINE( 156)						 ::BackgroundDancer dancer =  ::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(130) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 157)						dancer->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 158)						grpLimoDancers->add(dancer).StaticCast<  ::BackgroundDancer >();
HXLINE( 159)						this->swagBacks->set((HX_("dancer",df,49,8f,1e) + 0),dancer);
            					}
HXLINE( 155)					{
HXLINE( 156)						 ::BackgroundDancer dancer1 =  ::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(500) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 157)						dancer1->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 158)						grpLimoDancers->add(dancer1).StaticCast<  ::BackgroundDancer >();
HXLINE( 159)						this->swagBacks->set((HX_("dancer",df,49,8f,1e) + 1),dancer1);
            					}
HXLINE( 155)					{
HXLINE( 156)						 ::BackgroundDancer dancer2 =  ::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(870) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 157)						dancer2->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 158)						grpLimoDancers->add(dancer2).StaticCast<  ::BackgroundDancer >();
HXLINE( 159)						this->swagBacks->set((HX_("dancer",df,49,8f,1e) + 2),dancer2);
            					}
HXLINE( 155)					{
HXLINE( 156)						 ::BackgroundDancer dancer3 =  ::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(1240) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 157)						dancer3->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 158)						grpLimoDancers->add(dancer3).StaticCast<  ::BackgroundDancer >();
HXLINE( 159)						this->swagBacks->set((HX_("dancer",df,49,8f,1e) + 3),dancer3);
            					}
HXLINE( 155)					{
HXLINE( 156)						 ::BackgroundDancer dancer4 =  ::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(1610) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 157)						dancer4->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 158)						grpLimoDancers->add(dancer4).StaticCast<  ::BackgroundDancer >();
HXLINE( 159)						this->swagBacks->set((HX_("dancer",df,49,8f,1e) + 4),dancer4);
            					}
            				}
HXLINE( 162)				this->swagBacks->set(HX_("fastCar",d8,f2,1f,de),fastCar1);
HXLINE( 163)				this->layInFront->__get(2).StaticCast< ::Array< ::Dynamic> >()->push(fastCar1);
HXLINE( 164)				this->resetFastCar();
            			}
HXLINE( 167)			 ::flixel::FlxSprite overlayShit =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-500,-600,null());
HXDLIN( 167)			 ::flixel::FlxSprite overlayShit1 = overlayShit->loadGraphic(::Paths_obj::loadImage(HX_("limo/limoOverlay",01,f0,58,a8),HX_("week4",c0,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 168)			overlayShit1->set_alpha(((Float)0.5));
HXLINE( 177)			 ::flixel::graphics::frames::FlxAtlasFrames limoTex = ::Paths_obj::getSparrowAtlas(HX_("limo/limoDrive",3b,67,64,e6),HX_("week4",c0,95,be,c7),null());
HXLINE( 179)			 ::flixel::FlxSprite limo =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-120,550,null());
HXLINE( 180)			limo->set_frames(limoTex);
HXLINE( 181)			limo->animation->addByPrefix(HX_("drive",0a,69,bc,df),HX_("Limo stage",1d,b3,df,4c),24,null(),null(),null());
HXLINE( 182)			limo->animation->play(HX_("drive",0a,69,bc,df),null(),null(),null());
HXLINE( 183)			limo->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 184)			this->layInFront->__get(0).StaticCast< ::Array< ::Dynamic> >()->push(limo);
HXLINE( 185)			this->swagBacks->set(HX_("limo",1f,17,b3,47),limo);
HXLINE( 125)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("mall",d4,3a,56,48)) ){
HXLINE( 189)			this->camZoom = ((Float)0.80);
HXLINE( 191)			 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-1000,-500,null());
HXDLIN( 191)			 ::flixel::FlxSprite bg1 = bg->loadGraphic(::Paths_obj::loadImage(HX_("christmas/bgWalls",57,9f,1b,51),HX_("week5",c1,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 192)			bg1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 193)			bg1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 194)			bg1->set_active(false);
HXLINE( 195)			bg1->setGraphicSize(::Std_obj::_hx_int((bg1->get_width() * ((Float)0.8))),null());
HXLINE( 196)			bg1->updateHitbox();
HXLINE( 197)			this->swagBacks->set(HX_("bg",c5,55,00,00),bg1);
HXLINE( 198)			this->toAdd->push(bg1);
HXLINE( 200)			 ::flixel::FlxSprite upperBoppers =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-240,-90,null());
HXLINE( 201)			upperBoppers->set_frames(::Paths_obj::getSparrowAtlas(HX_("christmas/upperBop",2e,2f,6d,ac),HX_("week5",c1,95,be,c7),null()));
HXLINE( 202)			upperBoppers->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Upper Crowd Bob",a4,72,cf,77),24,false,null(),null());
HXLINE( 203)			upperBoppers->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 204)			upperBoppers->scrollFactor->set(((Float)0.33),((Float)0.33));
HXLINE( 205)			upperBoppers->setGraphicSize(::Std_obj::_hx_int((upperBoppers->get_width() * ((Float)0.85))),null());
HXLINE( 206)			upperBoppers->updateHitbox();
HXLINE( 207)			if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 209)				this->swagBacks->set(HX_("upperBoppers",37,47,71,21),upperBoppers);
HXLINE( 210)				this->toAdd->push(upperBoppers);
HXLINE( 211)				this->animatedBacks->push(upperBoppers);
            			}
HXLINE( 214)			 ::flixel::FlxSprite bgEscalator =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-1100,-600,null());
HXDLIN( 214)			 ::flixel::FlxSprite bgEscalator1 = bgEscalator->loadGraphic(::Paths_obj::loadImage(HX_("christmas/bgEscalator",64,1f,c0,d5),HX_("week5",c1,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 215)			bgEscalator1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 216)			bgEscalator1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 217)			bgEscalator1->set_active(false);
HXLINE( 218)			bgEscalator1->setGraphicSize(::Std_obj::_hx_int((bgEscalator1->get_width() * ((Float)0.9))),null());
HXLINE( 219)			bgEscalator1->updateHitbox();
HXLINE( 220)			this->swagBacks->set(HX_("bgEscalator",b1,86,fd,8c),bgEscalator1);
HXLINE( 221)			this->toAdd->push(bgEscalator1);
HXLINE( 223)			 ::flixel::FlxSprite tree =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,370,-250,null());
HXDLIN( 223)			 ::flixel::FlxSprite tree1 = tree->loadGraphic(::Paths_obj::loadImage(HX_("christmas/christmasTree",73,57,6d,7b),HX_("week5",c1,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 224)			tree1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 225)			tree1->scrollFactor->set(((Float)0.40),((Float)0.40));
HXLINE( 226)			this->swagBacks->set(HX_("tree",5e,99,03,4d),tree1);
HXLINE( 227)			this->toAdd->push(tree1);
HXLINE( 229)			 ::flixel::FlxSprite bottomBoppers =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-300,140,null());
HXLINE( 230)			bottomBoppers->set_frames(::Paths_obj::getSparrowAtlas(HX_("christmas/bottomBop",cb,69,c5,59),HX_("week5",c1,95,be,c7),null()));
HXLINE( 231)			bottomBoppers->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Bottom Level Boppers",c8,41,25,54),24,false,null(),null());
HXLINE( 232)			bottomBoppers->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 233)			bottomBoppers->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 234)			bottomBoppers->setGraphicSize(::Std_obj::_hx_int(bottomBoppers->get_width()),null());
HXLINE( 235)			bottomBoppers->updateHitbox();
HXLINE( 236)			if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 238)				this->swagBacks->set(HX_("bottomBoppers",ce,2c,ba,6e),bottomBoppers);
HXLINE( 239)				this->toAdd->push(bottomBoppers);
HXLINE( 240)				this->animatedBacks->push(bottomBoppers);
            			}
HXLINE( 243)			 ::flixel::FlxSprite fgSnow =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-600,700,null());
HXDLIN( 243)			 ::flixel::FlxSprite fgSnow1 = fgSnow->loadGraphic(::Paths_obj::loadImage(HX_("christmas/fgSnow",91,40,e7,37),HX_("week5",c1,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 244)			fgSnow1->set_active(false);
HXLINE( 245)			fgSnow1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 246)			this->swagBacks->set(HX_("fgSnow",64,1c,dd,4d),fgSnow1);
HXLINE( 247)			this->toAdd->push(fgSnow1);
HXLINE( 249)			 ::flixel::FlxSprite santa =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-840,150,null());
HXLINE( 250)			santa->set_frames(::Paths_obj::getSparrowAtlas(HX_("christmas/santa",00,86,f4,2d),HX_("week5",c1,95,be,c7),null()));
HXLINE( 251)			santa->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("santa idle in fear",72,07,31,fd),24,false,null(),null());
HXLINE( 252)			santa->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 253)			if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 255)				this->swagBacks->set(HX_("santa",8d,45,86,77),santa);
HXLINE( 256)				this->toAdd->push(santa);
HXLINE( 257)				this->animatedBacks->push(santa);
            			}
HXLINE( 188)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("mallEvil",88,d3,e3,a7)) ){
HXLINE( 262)			 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-400,-500,null());
HXDLIN( 262)			 ::flixel::FlxSprite bg1 = bg->loadGraphic(::Paths_obj::loadImage(HX_("christmas/evilBG",86,9d,17,83),HX_("week5",c1,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 263)			bg1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 264)			bg1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 265)			bg1->set_active(false);
HXLINE( 266)			bg1->setGraphicSize(::Std_obj::_hx_int((bg1->get_width() * ((Float)0.8))),null());
HXLINE( 267)			bg1->updateHitbox();
HXLINE( 268)			this->swagBacks->set(HX_("bg",c5,55,00,00),bg1);
HXLINE( 269)			this->toAdd->push(bg1);
HXLINE( 271)			 ::flixel::FlxSprite evilTree =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,300,-300,null());
HXDLIN( 271)			 ::flixel::FlxSprite evilTree1 = evilTree->loadGraphic(::Paths_obj::loadImage(HX_("christmas/evilTree",7f,5b,65,3a),HX_("week5",c1,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 272)			evilTree1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 273)			evilTree1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 274)			this->swagBacks->set(HX_("evilTree",12,12,68,1e),evilTree1);
HXLINE( 275)			this->toAdd->push(evilTree1);
HXLINE( 277)			 ::flixel::FlxSprite evilSnow =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,700,null());
HXDLIN( 277)			 ::flixel::FlxSprite evilSnow1 = evilSnow->loadGraphic(::Paths_obj::loadImage(HX_("christmas/evilSnow",a4,24,b9,39),HX_("week5",c1,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 278)			evilSnow1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 279)			this->swagBacks->set(HX_("evilSnow",37,db,bb,1d),evilSnow1);
HXLINE( 280)			this->toAdd->push(evilSnow1);
HXLINE( 261)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("philly",28,77,5e,ef)) ){
HXLINE(  74)			 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-100,null(),null());
HXDLIN(  74)			 ::flixel::FlxSprite bg1 = bg->loadGraphic(::Paths_obj::loadImage(HX_("philly/sky",3a,d3,d5,cc),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE(  75)			bg1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE(  76)			this->swagBacks->set(HX_("bg",c5,55,00,00),bg1);
HXLINE(  77)			this->toAdd->push(bg1);
HXLINE(  79)			 ::flixel::FlxSprite city =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-10,null(),null());
HXDLIN(  79)			 ::flixel::FlxSprite city1 = city->loadGraphic(::Paths_obj::loadImage(HX_("philly/city",32,0d,ae,63),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE(  80)			city1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  81)			city1->setGraphicSize(::Std_obj::_hx_int((city1->get_width() * ((Float)0.85))),null());
HXLINE(  82)			city1->updateHitbox();
HXLINE(  83)			this->swagBacks->set(HX_("city",ab,31,c0,41),city1);
HXLINE(  84)			this->toAdd->push(city1);
HXLINE(  86)			 ::flixel::group::FlxTypedGroup phillyCityLights =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  87)			if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE(  89)				this->swagGroup->set(HX_("phillyCityLights",30,e0,12,1f),phillyCityLights);
HXLINE(  90)				this->toAdd->push(phillyCityLights);
            			}
HXLINE(  93)			{
HXLINE(  94)				{
HXLINE(  95)					 ::flixel::FlxSprite light =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  95)					 ::flixel::FlxSprite light1 = light->loadGraphic(::Paths_obj::loadImage((HX_("philly/win",75,da,d8,cc) + 0),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE(  96)					light1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  97)					light1->set_visible(false);
HXLINE(  98)					light1->setGraphicSize(::Std_obj::_hx_int((light1->get_width() * ((Float)0.85))),null());
HXLINE(  99)					light1->updateHitbox();
HXLINE( 100)					light1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 101)					phillyCityLights->add(light1).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  94)				{
HXLINE(  95)					 ::flixel::FlxSprite light2 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  95)					 ::flixel::FlxSprite light3 = light2->loadGraphic(::Paths_obj::loadImage((HX_("philly/win",75,da,d8,cc) + 1),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE(  96)					light3->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  97)					light3->set_visible(false);
HXLINE(  98)					light3->setGraphicSize(::Std_obj::_hx_int((light3->get_width() * ((Float)0.85))),null());
HXLINE(  99)					light3->updateHitbox();
HXLINE( 100)					light3->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 101)					phillyCityLights->add(light3).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  94)				{
HXLINE(  95)					 ::flixel::FlxSprite light4 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  95)					 ::flixel::FlxSprite light5 = light4->loadGraphic(::Paths_obj::loadImage((HX_("philly/win",75,da,d8,cc) + 2),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE(  96)					light5->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  97)					light5->set_visible(false);
HXLINE(  98)					light5->setGraphicSize(::Std_obj::_hx_int((light5->get_width() * ((Float)0.85))),null());
HXLINE(  99)					light5->updateHitbox();
HXLINE( 100)					light5->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 101)					phillyCityLights->add(light5).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  94)				{
HXLINE(  95)					 ::flixel::FlxSprite light6 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  95)					 ::flixel::FlxSprite light7 = light6->loadGraphic(::Paths_obj::loadImage((HX_("philly/win",75,da,d8,cc) + 3),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE(  96)					light7->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  97)					light7->set_visible(false);
HXLINE(  98)					light7->setGraphicSize(::Std_obj::_hx_int((light7->get_width() * ((Float)0.85))),null());
HXLINE(  99)					light7->updateHitbox();
HXLINE( 100)					light7->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 101)					phillyCityLights->add(light7).StaticCast<  ::flixel::FlxSprite >();
            				}
HXLINE(  94)				{
HXLINE(  95)					 ::flixel::FlxSprite light8 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,city1->x,null(),null());
HXDLIN(  95)					 ::flixel::FlxSprite light9 = light8->loadGraphic(::Paths_obj::loadImage((HX_("philly/win",75,da,d8,cc) + 4),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE(  96)					light9->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE(  97)					light9->set_visible(false);
HXLINE(  98)					light9->setGraphicSize(::Std_obj::_hx_int((light9->get_width() * ((Float)0.85))),null());
HXLINE(  99)					light9->updateHitbox();
HXLINE( 100)					light9->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 101)					phillyCityLights->add(light9).StaticCast<  ::flixel::FlxSprite >();
            				}
            			}
HXLINE( 104)			 ::flixel::FlxSprite streetBehind =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-40,50,null());
HXDLIN( 104)			 ::flixel::FlxSprite streetBehind1 = streetBehind->loadGraphic(::Paths_obj::loadImage(HX_("philly/behindTrain",07,a4,6d,d4),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 105)			this->swagBacks->set(HX_("streetBehind",1d,21,e4,00),streetBehind1);
HXLINE( 106)			this->toAdd->push(streetBehind1);
HXLINE( 108)			 ::flixel::FlxSprite phillyTrain =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,2000,360,null());
HXDLIN( 108)			 ::flixel::FlxSprite phillyTrain1 = phillyTrain->loadGraphic(::Paths_obj::loadImage(HX_("philly/train",61,ce,51,a4),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 109)			if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 111)				this->swagBacks->set(HX_("phillyTrain",80,9b,65,bb),phillyTrain1);
HXLINE( 112)				this->toAdd->push(phillyTrain1);
            			}
HXLINE( 115)			 ::flixel::_hx_system::FlxSound _hx_tmp =  ::flixel::_hx_system::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 115)			this->trainSound = _hx_tmp->loadEmbedded(::Paths_obj::sound(HX_("train_passes",56,da,5a,7f),HX_("shared",a5,5e,2b,1d)),null(),null(),null());
HXLINE( 116)			::flixel::FlxG_obj::sound->list->add(this->trainSound).StaticCast<  ::flixel::_hx_system::FlxSound >();
HXLINE( 120)			 ::flixel::FlxSprite street =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-40,streetBehind1->y,null());
HXDLIN( 120)			 ::flixel::FlxSprite street1 = street->loadGraphic(::Paths_obj::loadImage(HX_("philly/street",4a,23,ee,ee),HX_("week3",bf,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 121)			this->swagBacks->set(HX_("street",03,18,2d,11),street1);
HXLINE( 122)			this->toAdd->push(street1);
HXLINE(  73)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 286)			 ::flixel::FlxSprite bgSky =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null());
HXDLIN( 286)			 ::flixel::FlxSprite bgSky1 = bgSky->loadGraphic(::Paths_obj::loadImage(HX_("weeb/weebSky",52,34,cf,a4),HX_("week6",c2,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 287)			bgSky1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 288)			this->swagBacks->set(HX_("bgSky",1c,2c,99,b1),bgSky1);
HXLINE( 289)			this->toAdd->push(bgSky1);
HXLINE( 291)			int repositionShit = -200;
HXLINE( 293)			 ::flixel::FlxSprite bgSchool =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,repositionShit,0,null());
HXDLIN( 293)			 ::flixel::FlxSprite bgSchool1 = bgSchool->loadGraphic(::Paths_obj::loadImage(HX_("weeb/weebSchool",a3,21,c0,f5),HX_("week6",c2,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 294)			bgSchool1->scrollFactor->set(((Float)0.6),((Float)0.90));
HXLINE( 295)			this->swagBacks->set(HX_("bgSchool",19,a4,cf,15),bgSchool1);
HXLINE( 296)			this->toAdd->push(bgSchool1);
HXLINE( 298)			 ::flixel::FlxSprite bgStreet =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,repositionShit,null(),null());
HXDLIN( 298)			 ::flixel::FlxSprite bgStreet1 = bgStreet->loadGraphic(::Paths_obj::loadImage(HX_("weeb/weebStreet",32,81,24,c6),HX_("week6",c2,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 299)			bgStreet1->scrollFactor->set(((Float)0.95),((Float)0.95));
HXLINE( 300)			this->swagBacks->set(HX_("bgStreet",a8,03,34,e6),bgStreet1);
HXLINE( 301)			this->toAdd->push(bgStreet1);
HXLINE( 303)			 ::flixel::FlxSprite fgTrees =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(repositionShit + 170),130,null());
HXDLIN( 303)			 ::flixel::FlxSprite fgTrees1 = fgTrees->loadGraphic(::Paths_obj::loadImage(HX_("weeb/weebTreesBack",4d,ac,bd,40),HX_("week6",c2,95,be,c7)),null(),null(),null(),null(),null());
HXLINE( 304)			fgTrees1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 305)			this->swagBacks->set(HX_("fgTrees",54,84,9f,69),fgTrees1);
HXLINE( 306)			this->toAdd->push(fgTrees1);
HXLINE( 308)			 ::flixel::FlxSprite bgTrees =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(repositionShit - 380),-800,null());
HXLINE( 309)			 ::flixel::graphics::FlxGraphic treetex = ::Paths_obj::loadImage(HX_("weeb/weebTrees",06,ab,3a,76),HX_("week6",c2,95,be,c7));
HXDLIN( 309)			 ::flixel::graphics::frames::FlxAtlasFrames treetex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSpriteSheetPacker(treetex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/weebTrees",06,ab,3a,76)) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),HX_("week6",c2,95,be,c7)));
HXLINE( 310)			bgTrees->set_frames(treetex1);
HXLINE( 311)			bgTrees->animation->add(HX_("treeLoop",e2,72,7f,2b),::Array_obj< int >::fromData( _hx_array_data_1738da9e_17,19),12,null(),null(),null());
HXLINE( 312)			bgTrees->animation->play(HX_("treeLoop",e2,72,7f,2b),null(),null(),null());
HXLINE( 313)			bgTrees->scrollFactor->set(((Float)0.85),((Float)0.85));
HXLINE( 314)			this->swagBacks->set(HX_("bgTrees",50,a9,49,c3),bgTrees);
HXLINE( 315)			this->toAdd->push(bgTrees);
HXLINE( 317)			 ::flixel::FlxSprite treeLeaves =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,repositionShit,-40,null());
HXLINE( 318)			treeLeaves->set_frames(::Paths_obj::getSparrowAtlas(HX_("weeb/petals",8d,ca,2b,c2),HX_("week6",c2,95,be,c7),null()));
HXLINE( 319)			treeLeaves->animation->addByPrefix(HX_("leaves",9c,23,7b,96),HX_("PETALS ALL",0a,57,91,88),24,true,null(),null());
HXLINE( 320)			treeLeaves->animation->play(HX_("leaves",9c,23,7b,96),null(),null(),null());
HXLINE( 321)			treeLeaves->scrollFactor->set(((Float)0.85),((Float)0.85));
HXLINE( 322)			this->swagBacks->set(HX_("treeLeaves",9a,8b,2d,d5),treeLeaves);
HXLINE( 323)			this->toAdd->push(treeLeaves);
HXLINE( 325)			int widShit = ::Std_obj::_hx_int((bgSky1->get_width() * ( (Float)(6) )));
HXLINE( 327)			bgSky1->setGraphicSize(widShit,null());
HXLINE( 328)			bgSchool1->setGraphicSize(widShit,null());
HXLINE( 329)			bgStreet1->setGraphicSize(widShit,null());
HXLINE( 330)			bgTrees->setGraphicSize(::Std_obj::_hx_int((( (Float)(widShit) ) * ((Float)1.4))),null());
HXLINE( 331)			fgTrees1->setGraphicSize(::Std_obj::_hx_int((( (Float)(widShit) ) * ((Float)0.8))),null());
HXLINE( 332)			treeLeaves->setGraphicSize(widShit,null());
HXLINE( 334)			fgTrees1->updateHitbox();
HXLINE( 335)			bgSky1->updateHitbox();
HXLINE( 336)			bgSchool1->updateHitbox();
HXLINE( 337)			bgStreet1->updateHitbox();
HXLINE( 338)			bgTrees->updateHitbox();
HXLINE( 339)			treeLeaves->updateHitbox();
HXLINE( 341)			 ::BackgroundGirls bgGirls =  ::BackgroundGirls_obj::__alloc( HX_CTX ,( (Float)(-100) ),( (Float)(190) ));
HXLINE( 342)			bgGirls->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 345)			if ((::GameplayCustomizeState_obj::freeplaySong == HX_("roses",04,6c,64,ed))) {
HXLINE( 347)				if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 348)					bgGirls->getScared();
            				}
            			}
HXLINE( 351)			Float _hx_tmp = bgGirls->get_width();
HXDLIN( 351)			bgGirls->setGraphicSize(::Std_obj::_hx_int((_hx_tmp * ::CoolUtil_obj::daPixelZoom)),null());
HXLINE( 352)			bgGirls->updateHitbox();
HXLINE( 353)			if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 355)				this->swagBacks->set(HX_("bgGirls",92,16,2b,41),bgGirls);
HXLINE( 356)				this->toAdd->push(bgGirls);
            			}
HXLINE( 283)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("schoolEvil",28,a1,f5,f7)) ){
HXLINE( 361)			 ::flixel::addons::effects::chainable::FlxWaveEffect waveEffectBG =  ::flixel::addons::effects::chainable::FlxWaveEffect_obj::__alloc( HX_CTX ,::flixel::addons::effects::chainable::FlxWaveMode_obj::ALL_dyn(),2,-1,3,2,null(),null());
HXLINE( 362)			 ::flixel::addons::effects::chainable::FlxWaveEffect waveEffectFG =  ::flixel::addons::effects::chainable::FlxWaveEffect_obj::__alloc( HX_CTX ,::flixel::addons::effects::chainable::FlxWaveMode_obj::ALL_dyn(),2,-1,5,2,null(),null());
HXLINE( 364)			int posX = 400;
HXLINE( 365)			int posY = 200;
HXLINE( 367)			 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,posX,posY,null());
HXLINE( 368)			bg->set_frames(::Paths_obj::getSparrowAtlas(HX_("weeb/animatedEvilSchool",8f,dd,53,cd),HX_("week6",c2,95,be,c7),null()));
HXLINE( 369)			bg->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("background 2",80,07,9d,17),24,null(),null(),null());
HXLINE( 370)			bg->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 371)			bg->scrollFactor->set(((Float)0.8),((Float)0.9));
HXLINE( 372)			bg->scale->set(6,6);
HXLINE( 373)			this->swagBacks->set(HX_("bg",c5,55,00,00),bg);
HXLINE( 374)			this->toAdd->push(bg);
HXLINE( 360)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("warzone",54,f7,be,11)) ){
HXLINE( 416)			 ::flixel::FlxSprite sky =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-400,-400,null());
HXDLIN( 416)			::String library = null();
HXDLIN( 416)			 ::flixel::FlxSprite sky1 = sky->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankSky",1c,2b,ec,e0)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE( 417)			sky1->scrollFactor->set(0,0);
HXLINE( 418)			sky1->set_antialiasing(true);
HXLINE( 419)			sky1->setGraphicSize(::Std_obj::_hx_int((sky1->get_width() * ((Float)1.5))),null());
HXLINE( 420)			this->swagBacks->set(HX_("sky",e1,a0,57,00),sky1);
HXLINE( 421)			this->toAdd->push(sky1);
HXLINE( 424)			int clouds = ::flixel::FlxG_obj::random->_hx_int(-700,-100,null());
HXDLIN( 424)			 ::flixel::FlxSprite clouds1 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,clouds,::flixel::FlxG_obj::random->_hx_int(-20,20,null()),null());
HXDLIN( 424)			::String library1 = null();
HXDLIN( 424)			 ::flixel::FlxSprite clouds2 = clouds1->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankClouds",03,7a,b0,20)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null());
HXLINE( 425)			clouds2->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 426)			 ::flixel::math::FlxPoint clouds3 = clouds2->velocity;
HXDLIN( 426)			clouds3->set_x(::flixel::FlxG_obj::random->_hx_float(5,15,null()));
HXLINE( 427)			clouds2->set_antialiasing(true);
HXLINE( 428)			clouds2->updateHitbox();
HXLINE( 429)			this->swagBacks->set(HX_("clouds",5e,2d,53,0e),clouds2);
HXLINE( 430)			this->toAdd->push(clouds2);
HXLINE( 432)			 ::flixel::FlxSprite mountains =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-300,-20,null());
HXDLIN( 432)			::String library2 = null();
HXDLIN( 432)			 ::flixel::FlxSprite mountains1 = mountains->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankMountains",01,9a,2d,54)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE( 433)			mountains1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 434)			mountains1->setGraphicSize(::Std_obj::_hx_int((((Float)1.2) * mountains1->get_width())),null());
HXLINE( 435)			mountains1->updateHitbox();
HXLINE( 436)			mountains1->set_antialiasing(true);
HXLINE( 437)			this->swagBacks->set(HX_("mountains",86,31,23,a5),mountains1);
HXLINE( 438)			this->toAdd->push(mountains1);
HXLINE( 440)			 ::flixel::FlxSprite buildings =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,0,null());
HXDLIN( 440)			::String library3 = null();
HXDLIN( 440)			 ::flixel::FlxSprite buildings1 = buildings->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankBuildings",fa,ab,28,aa)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null());
HXLINE( 441)			buildings1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 442)			buildings1->setGraphicSize(::Std_obj::_hx_int((buildings1->get_width() * ((Float)1.1))),null());
HXLINE( 443)			buildings1->updateHitbox();
HXLINE( 444)			buildings1->set_antialiasing(true);
HXLINE( 445)			this->swagBacks->set(HX_("buildings",7f,43,1e,fb),buildings1);
HXLINE( 446)			this->toAdd->push(buildings1);
HXLINE( 448)			 ::flixel::FlxSprite ruins =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,0,null());
HXDLIN( 448)			::String library4 = null();
HXDLIN( 448)			 ::flixel::FlxSprite ruins1 = ruins->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankRuins",06,f4,cb,87)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4),null(),null(),null(),null(),null());
HXLINE( 449)			ruins1->scrollFactor->set(((Float)0.35),((Float)0.35));
HXLINE( 450)			ruins1->setGraphicSize(::Std_obj::_hx_int((ruins1->get_width() * ((Float)1.1))),null());
HXLINE( 451)			ruins1->updateHitbox();
HXLINE( 452)			ruins1->set_antialiasing(true);
HXLINE( 453)			this->swagBacks->set(HX_("ruins",0b,25,54,f1),ruins1);
HXLINE( 454)			this->toAdd->push(ruins1);
HXLINE( 456)			 ::flixel::FlxSprite smokeLeft =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,-100,null());
HXLINE( 457)			smokeLeft->set_frames(::Paths_obj::getSparrowAtlas(HX_("warzone/smokeLeft",5b,91,4d,62),null(),null()));
HXLINE( 458)			smokeLeft->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("SmokeBlurLeft ",c3,2c,88,2c),24,true,null(),null());
HXLINE( 459)			smokeLeft->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 460)			smokeLeft->set_antialiasing(true);
HXLINE( 461)			smokeLeft->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 462)			this->swagBacks->set(HX_("smokeLeft",16,a7,ec,46),smokeLeft);
HXLINE( 463)			this->toAdd->push(smokeLeft);
HXLINE( 465)			 ::flixel::FlxSprite smokeRight =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,1100,-100,null());
HXLINE( 466)			smokeRight->set_frames(::Paths_obj::getSparrowAtlas(HX_("warzone/smokeRight",08,ac,9e,18),null(),null()));
HXLINE( 467)			smokeRight->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("SmokeRight ",73,ad,46,f1),24,true,null(),null());
HXLINE( 468)			smokeRight->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 469)			smokeRight->set_antialiasing(true);
HXLINE( 470)			smokeRight->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 472)			this->swagBacks->set(HX_("smokeRight",ed,99,32,3f),smokeRight);
HXLINE( 473)			this->toAdd->push(smokeRight);
HXLINE( 475)			 ::flixel::FlxSprite tower =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,100,120,null());
HXLINE( 476)			tower->set_frames(::Paths_obj::getSparrowAtlas(HX_("warzone/tankWatchtower",7f,4c,22,73),null(),null()));
HXLINE( 477)			tower->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("watchtower gradient color",39,8f,02,81),24,false,null(),null());
HXLINE( 478)			tower->set_antialiasing(true);
HXLINE( 480)			this->swagBacks->set(HX_("tower",09,9e,34,14),tower);
HXLINE( 481)			this->toAdd->push(tower);
HXLINE( 483)			 ::flixel::FlxSprite tankRolling =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,300,300,null());
HXLINE( 484)			tankRolling->set_frames(::Paths_obj::getSparrowAtlas(HX_("tankRolling",bb,ab,47,f7),null(),null()));
HXLINE( 485)			tankRolling->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BG tank w lighting ",70,a2,49,45),24,true,null(),null());
HXLINE( 486)			tankRolling->scrollFactor->set(((Float)0.5),((Float)0.5));
HXLINE( 487)			tankRolling->set_antialiasing(true);
HXLINE( 488)			tankRolling->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 490)			this->swagBacks->set(HX_("tankRolling",bb,ab,47,f7),tankRolling);
HXLINE( 491)			this->toAdd->push(tankRolling);
HXLINE( 493)			 ::flixel::FlxSprite ground =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-420,-150,null());
HXDLIN( 493)			::String library5 = null();
HXDLIN( 493)			 ::flixel::FlxSprite ground1 = ground->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankGround",2c,6f,85,2e)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5),null(),null(),null(),null(),null());
HXLINE( 494)			ground1->scrollFactor->set(null(),null());
HXLINE( 495)			ground1->set_antialiasing(true);
HXLINE( 496)			ground1->setGraphicSize(::Std_obj::_hx_int((ground1->get_width() * ((Float)1.15))),null());
HXLINE( 497)			ground1->scrollFactor->set(1,1);
HXLINE( 499)			ground1->updateHitbox();
HXLINE( 500)			this->swagBacks->set(HX_("ground",87,22,28,1c),ground1);
HXLINE( 501)			this->toAdd->push(ground1);
HXLINE( 415)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("warzone-stress",4d,5f,1e,93)) ){
HXLINE( 557)			 ::flixel::FlxSprite sky =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-400,-400,null());
HXDLIN( 557)			::String library = null();
HXDLIN( 557)			 ::flixel::FlxSprite sky1 = sky->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankSky",1c,2b,ec,e0)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE( 558)			sky1->scrollFactor->set(0,0);
HXLINE( 559)			sky1->set_antialiasing(true);
HXLINE( 560)			sky1->setGraphicSize(::Std_obj::_hx_int((sky1->get_width() * ((Float)1.5))),null());
HXLINE( 561)			this->swagBacks->set(HX_("sky",e1,a0,57,00),sky1);
HXLINE( 562)			this->toAdd->push(sky1);
HXLINE( 565)			int clouds = ::flixel::FlxG_obj::random->_hx_int(-700,-100,null());
HXDLIN( 565)			 ::flixel::FlxSprite clouds1 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,clouds,::flixel::FlxG_obj::random->_hx_int(-20,20,null()),null());
HXDLIN( 565)			::String library1 = null();
HXDLIN( 565)			 ::flixel::FlxSprite clouds2 = clouds1->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankClouds",03,7a,b0,20)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null());
HXLINE( 566)			clouds2->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 567)			 ::flixel::math::FlxPoint clouds3 = clouds2->velocity;
HXDLIN( 567)			clouds3->set_x(::flixel::FlxG_obj::random->_hx_float(5,15,null()));
HXLINE( 568)			clouds2->set_antialiasing(true);
HXLINE( 569)			clouds2->updateHitbox();
HXLINE( 570)			this->swagBacks->set(HX_("clouds",5e,2d,53,0e),clouds2);
HXLINE( 571)			this->toAdd->push(clouds2);
HXLINE( 573)			 ::flixel::FlxSprite mountains =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-300,-20,null());
HXDLIN( 573)			::String library2 = null();
HXDLIN( 573)			 ::flixel::FlxSprite mountains1 = mountains->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankMountains",01,9a,2d,54)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE( 574)			mountains1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 575)			mountains1->setGraphicSize(::Std_obj::_hx_int((((Float)1.2) * mountains1->get_width())),null());
HXLINE( 576)			mountains1->updateHitbox();
HXLINE( 577)			mountains1->set_antialiasing(true);
HXLINE( 578)			this->swagBacks->set(HX_("mountains",86,31,23,a5),mountains1);
HXLINE( 579)			this->toAdd->push(mountains1);
HXLINE( 581)			 ::flixel::FlxSprite buildings =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,0,null());
HXDLIN( 581)			::String library3 = null();
HXDLIN( 581)			 ::flixel::FlxSprite buildings1 = buildings->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankBuildings",fa,ab,28,aa)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null());
HXLINE( 582)			buildings1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 583)			buildings1->setGraphicSize(::Std_obj::_hx_int((buildings1->get_width() * ((Float)1.1))),null());
HXLINE( 584)			buildings1->updateHitbox();
HXLINE( 585)			buildings1->set_antialiasing(true);
HXLINE( 586)			this->swagBacks->set(HX_("buildings",7f,43,1e,fb),buildings1);
HXLINE( 587)			this->toAdd->push(buildings1);
HXLINE( 589)			 ::flixel::FlxSprite ruins =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,0,null());
HXDLIN( 589)			::String library4 = null();
HXDLIN( 589)			 ::flixel::FlxSprite ruins1 = ruins->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankRuins",06,f4,cb,87)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4),null(),null(),null(),null(),null());
HXLINE( 590)			ruins1->scrollFactor->set(((Float)0.35),((Float)0.35));
HXLINE( 591)			ruins1->setGraphicSize(::Std_obj::_hx_int((ruins1->get_width() * ((Float)1.1))),null());
HXLINE( 592)			ruins1->updateHitbox();
HXLINE( 593)			ruins1->set_antialiasing(true);
HXLINE( 594)			this->swagBacks->set(HX_("ruins",0b,25,54,f1),ruins1);
HXLINE( 595)			this->toAdd->push(ruins1);
HXLINE( 597)			 ::flixel::FlxSprite smokeLeft =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,-100,null());
HXLINE( 598)			smokeLeft->set_frames(::Paths_obj::getSparrowAtlas(HX_("warzone/smokeLeft",5b,91,4d,62),null(),null()));
HXLINE( 599)			smokeLeft->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("SmokeBlurLeft ",c3,2c,88,2c),24,true,null(),null());
HXLINE( 600)			smokeLeft->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 601)			smokeLeft->set_antialiasing(true);
HXLINE( 602)			smokeLeft->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 603)			this->swagBacks->set(HX_("smokeLeft",16,a7,ec,46),smokeLeft);
HXLINE( 604)			this->toAdd->push(smokeLeft);
HXLINE( 606)			 ::flixel::FlxSprite smokeRight =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,1100,-100,null());
HXLINE( 607)			smokeRight->set_frames(::Paths_obj::getSparrowAtlas(HX_("warzone/smokeRight",08,ac,9e,18),null(),null()));
HXLINE( 608)			smokeRight->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("SmokeRight ",73,ad,46,f1),24,true,null(),null());
HXLINE( 609)			smokeRight->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 610)			smokeRight->set_antialiasing(true);
HXLINE( 611)			smokeRight->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 613)			this->swagBacks->set(HX_("smokeRight",ed,99,32,3f),smokeRight);
HXLINE( 614)			this->toAdd->push(smokeRight);
HXLINE( 616)			 ::flixel::FlxSprite tower =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,100,120,null());
HXLINE( 617)			tower->set_frames(::Paths_obj::getSparrowAtlas(HX_("warzone/tankWatchtower",7f,4c,22,73),null(),null()));
HXLINE( 618)			tower->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("watchtower gradient color",39,8f,02,81),24,false,null(),null());
HXLINE( 619)			tower->set_antialiasing(true);
HXLINE( 621)			this->swagBacks->set(HX_("tower",09,9e,34,14),tower);
HXLINE( 622)			this->toAdd->push(tower);
HXLINE( 624)			 ::flixel::FlxSprite tankRolling =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,300,300,null());
HXLINE( 625)			tankRolling->set_frames(::Paths_obj::getSparrowAtlas(HX_("tankRolling",bb,ab,47,f7),null(),null()));
HXLINE( 626)			tankRolling->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BG tank w lighting ",70,a2,49,45),24,true,null(),null());
HXLINE( 627)			tankRolling->scrollFactor->set(((Float)0.5),((Float)0.5));
HXLINE( 628)			tankRolling->set_antialiasing(true);
HXLINE( 629)			tankRolling->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 631)			this->swagBacks->set(HX_("tankRolling",bb,ab,47,f7),tankRolling);
HXLINE( 632)			this->toAdd->push(tankRolling);
HXLINE( 634)			 ::flixel::FlxSprite ground =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-420,-150,null());
HXDLIN( 634)			::String library5 = null();
HXDLIN( 634)			 ::flixel::FlxSprite ground1 = ground->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("warzone/tankGround",2c,6f,85,2e)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5),null(),null(),null(),null(),null());
HXLINE( 635)			ground1->scrollFactor->set(null(),null());
HXLINE( 636)			ground1->set_antialiasing(true);
HXLINE( 637)			ground1->setGraphicSize(::Std_obj::_hx_int((ground1->get_width() * ((Float)1.15))),null());
HXLINE( 638)			ground1->scrollFactor->set(1,1);
HXLINE( 640)			ground1->updateHitbox();
HXLINE( 641)			this->swagBacks->set(HX_("ground",87,22,28,1c),ground1);
HXLINE( 642)			this->toAdd->push(ground1);
HXLINE( 554)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE( 696)			::String deeefaultt = ::sys::io::File_obj::getContent(( (::String)(((HX_("assets/custom/custom_stages/",de,ba,4f,50) + ::PlayState_obj::SONG->__Field(HX_("songName",c0,d0,d7,36),::hx::paccDynamic)) + HX_(".txt",02,3f,c0,1e))) ));
HXLINE( 697)			this->curStage = deeefaultt;
HXLINE( 698)			if (::sys::FileSystem_obj::exists(((HX_("assets/custom/custom_stages/",de,ba,4f,50) + this->curStage) + HX_("/back.txt",d8,ff,38,b1)))) {
HXLINE( 700)				::String stagecustomb = ::sys::io::File_obj::getContent(((HX_("assets/custom/custom_stages/",de,ba,4f,50) + this->curStage) + HX_("/back.txt",d8,ff,38,b1)));
HXLINE( 701)				 ::flixel::FlxSprite bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-600,-200,null());
HXDLIN( 701)				 ::flixel::FlxSprite bg1 = bg->loadGraphic(::Paths_obj::loadImage(stagecustomb,HX_("shared",a5,5e,2b,1d)),null(),null(),null(),null(),null());
HXLINE( 702)				bg1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 703)				bg1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 704)				bg1->set_active(false);
HXLINE( 705)				this->swagBacks->set(HX_("bg",c5,55,00,00),bg1);
HXLINE( 706)				this->toAdd->push(bg1);
HXLINE( 707)				::String read = ::sys::io::File_obj::getContent(((HX_("assets/custom/custom_stages/",de,ba,4f,50) + this->curStage) + HX_("/back.txt",d8,ff,38,b1)));
HXLINE( 708)				if (::sys::FileSystem_obj::exists(((HX_("assets/shared/",1e,69,1e,47) + read) + HX_(".xml",69,3e,c3,1e)))) {
HXLINE( 710)					bg1->set_frames(::Paths_obj::getSparrowAtlas(read,null(),null()));
HXLINE( 711)					bg1->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("idle",14,a7,b3,45),null(),null(),null(),null());
HXLINE( 712)					bg1->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
            				}
            			}
HXLINE( 715)			if (::sys::FileSystem_obj::exists(((HX_("assets/custom/custom_stages/",de,ba,4f,50) + this->curStage) + HX_("/front.txt",1c,62,9e,be)))) {
HXLINE( 717)				::String stagecustomf = ::sys::io::File_obj::getContent(((HX_("assets/custom/custom_stages/",de,ba,4f,50) + this->curStage) + HX_("/front.txt",1c,62,9e,be)));
HXLINE( 718)				 ::flixel::FlxSprite stageFront =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-650,600,null());
HXDLIN( 718)				 ::flixel::FlxSprite stageFront1 = stageFront->loadGraphic(::Paths_obj::loadImage(stagecustomf,HX_("shared",a5,5e,2b,1d)),null(),null(),null(),null(),null());
HXLINE( 719)				stageFront1->setGraphicSize(::Std_obj::_hx_int((stageFront1->get_width() * ((Float)1.1))),null());
HXLINE( 720)				stageFront1->updateHitbox();
HXLINE( 721)				stageFront1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 722)				stageFront1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 723)				stageFront1->set_active(false);
HXLINE( 724)				this->swagBacks->set(HX_("stageFront",0b,6d,de,59),stageFront1);
HXLINE( 725)				this->toAdd->push(stageFront1);
HXLINE( 726)				::String read2 = ::sys::io::File_obj::getContent(((HX_("assets/custom/custom_stages/",de,ba,4f,50) + this->curStage) + HX_("/front.txt",1c,62,9e,be)));
HXLINE( 727)				if (::sys::FileSystem_obj::exists(((HX_("assets/shared/",1e,69,1e,47) + read2) + HX_(".xml",69,3e,c3,1e)))) {
HXLINE( 729)					stageFront1->set_frames(::Paths_obj::getSparrowAtlas(read2,null(),null()));
HXLINE( 730)					stageFront1->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("idle",14,a7,b3,45),null(),null(),null(),null());
HXLINE( 731)					stageFront1->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
            				}
            			}
HXLINE( 737)			if ((this->curStage == HX_("stage",be,6a,0b,84))) {
HXLINE( 739)				 ::flixel::FlxSprite stageCurtains =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-500,-300,null());
HXDLIN( 739)				 ::flixel::FlxSprite stageCurtains1 = stageCurtains->loadGraphic(::Paths_obj::loadImage(HX_("stagecurtains",df,ec,1a,4b),HX_("shared",a5,5e,2b,1d)),null(),null(),null(),null(),null());
HXLINE( 740)				stageCurtains1->setGraphicSize(::Std_obj::_hx_int((stageCurtains1->get_width() * ((Float)0.9))),null());
HXLINE( 741)				stageCurtains1->updateHitbox();
HXLINE( 742)				stageCurtains1->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
HXLINE( 743)				stageCurtains1->scrollFactor->set(((Float)1.3),((Float)1.3));
HXLINE( 744)				stageCurtains1->set_active(false);
HXLINE( 746)				this->swagBacks->set(HX_("stageCurtains",ff,a8,cc,24),stageCurtains1);
HXLINE( 747)				this->toAdd->push(stageCurtains1);
            			}
            		}
            		_hx_goto_0:;
            	}

Dynamic Stage_obj::__CreateEmpty() { return new Stage_obj; }

void *Stage_obj::_hx_vtable = 0;

Dynamic Stage_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Stage_obj > _hx_result = new Stage_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Stage_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3f706236) {
		if (inClassId<=(int)0x23a57bae) {
			if (inClassId<=(int)0x0b7d43fa) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b7d43fa;
			} else {
				return inClassId==(int)0x23a57bae;
			}
		} else {
			return inClassId==(int)0x2f064378 || inClassId==(int)0x3f706236;
		}
	} else {
		if (inClassId<=(int)0x7c795c9f) {
			return inClassId==(int)0x62817b24 || inClassId==(int)0x7c795c9f;
		} else {
			return inClassId==(int)0x7ccf8994;
		}
	}
}

void Stage_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_754_update)
HXLINE( 755)		this->super::update(elapsed);
HXLINE( 757)		if (!(::PlayStateChangeables_obj::Optimize)) {
HXLINE( 759)			if ((this->curStage == HX_("philly",28,77,5e,ef))) {
HXLINE( 762)				if (this->trainMoving) {
HXLINE( 764)					 ::Stage _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 764)					_hx_tmp->trainFrameTiming = (_hx_tmp->trainFrameTiming + elapsed);
HXLINE( 766)					if ((this->trainFrameTiming >= ((Float)0.041666666666666664))) {
HXLINE( 768)						this->updateTrainPos();
HXLINE( 769)						this->trainFrameTiming = ( (Float)(0) );
            					}
            				}
            			}
            		}
            	}


void Stage_obj::stepHit(){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_778_stepHit)
HXLINE( 779)		this->super::stepHit();
HXLINE( 781)		if (!(::PlayStateChangeables_obj::Optimize)) {
HXLINE( 783)			::Array< ::Dynamic> array = ( (::Array< ::Dynamic>)(this->slowBacks->get(this->curStep)) );
HXLINE( 784)			bool _hx_tmp;
HXDLIN( 784)			if (::hx::IsNotNull( array )) {
HXLINE( 784)				_hx_tmp = (array->length > 0);
            			}
            			else {
HXLINE( 784)				_hx_tmp = false;
            			}
HXDLIN( 784)			if (_hx_tmp) {
HXLINE( 786)				if (this->hideLastBG) {
HXLINE( 788)					{
HXLINE( 788)						 ::Dynamic bg = this->swagBacks->iterator();
HXDLIN( 788)						while(( (bool)(bg->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 788)							 ::flixel::FlxSprite bg1 = ( ( ::flixel::FlxSprite)(bg->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 790)							if (!(array->contains(bg1))) {
            								HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::flixel::FlxSprite,bg1) HXARGC(1)
            								void _hx_run( ::flixel::tweens::FlxTween tween){
            									HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_795_stepHit)
HXLINE( 795)									bg1->set_visible(false);
            								}
            								HX_END_LOCAL_FUNC1((void))

HXLINE( 792)								 ::flixel::tweens::misc::VarTween tween = ::flixel::tweens::FlxTween_obj::tween(bg1, ::Dynamic(::hx::Anon_obj::Create(1)
            									->setFixed(0,HX_("alpha",5e,a7,96,21),0)),this->tweenDuration, ::Dynamic(::hx::Anon_obj::Create(1)
            									->setFixed(0,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(bg1)))));
            							}
            						}
            					}
HXLINE( 800)					{
HXLINE( 800)						int _g = 0;
HXDLIN( 800)						while((_g < array->length)){
HXLINE( 800)							 ::flixel::FlxSprite bg = array->__get(_g).StaticCast<  ::flixel::FlxSprite >();
HXDLIN( 800)							_g = (_g + 1);
HXLINE( 802)							bg->set_visible(true);
HXLINE( 803)							::flixel::tweens::FlxTween_obj::tween(bg, ::Dynamic(::hx::Anon_obj::Create(1)
            								->setFixed(0,HX_("alpha",5e,a7,96,21),1)),this->tweenDuration,null());
            						}
            					}
            				}
            				else {
HXLINE( 808)					int _g = 0;
HXDLIN( 808)					while((_g < array->length)){
HXLINE( 808)						 ::flixel::FlxSprite bg = array->__get(_g).StaticCast<  ::flixel::FlxSprite >();
HXDLIN( 808)						_g = (_g + 1);
HXLINE( 809)						bg->set_visible(!(bg->visible));
            					}
            				}
            			}
            		}
            	}


void Stage_obj::beatHit(){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_816_beatHit)
HXLINE( 817)		this->super::beatHit();
HXLINE( 819)		bool _hx_tmp;
HXDLIN( 819)		if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 819)			_hx_tmp = (this->animatedBacks->length > 0);
            		}
            		else {
HXLINE( 819)			_hx_tmp = false;
            		}
HXDLIN( 819)		if (_hx_tmp) {
HXLINE( 821)			int _g = 0;
HXDLIN( 821)			::Array< ::Dynamic> _g1 = this->animatedBacks;
HXDLIN( 821)			while((_g < _g1->length)){
HXLINE( 821)				 ::flixel::FlxSprite bg = _g1->__get(_g).StaticCast<  ::flixel::FlxSprite >();
HXDLIN( 821)				_g = (_g + 1);
HXLINE( 822)				bg->animation->play(HX_("idle",14,a7,b3,45),true,null(),null());
            			}
            		}
HXLINE( 825)		if (!(::PlayStateChangeables_obj::Optimize)) {
HXLINE( 827)			::String _hx_switch_0 = this->curStage;
            			if (  (_hx_switch_0==HX_("halloween",8d,bb,38,50)) ){
HXLINE( 830)				bool _hx_tmp;
HXDLIN( 830)				Float Chance;
HXDLIN( 830)				if ((::Conductor_obj::bpm > 320)) {
HXLINE( 830)					Chance = ( (Float)(100) );
            				}
            				else {
HXLINE( 830)					Chance = ( (Float)(10) );
            				}
HXDLIN( 830)				if ((::flixel::FlxG_obj::random->_hx_float(0,100,null()) < Chance)) {
HXLINE( 830)					_hx_tmp = (this->curBeat > (this->lightningStrikeBeat + this->lightningOffset));
            				}
            				else {
HXLINE( 830)					_hx_tmp = false;
            				}
HXDLIN( 830)				if (_hx_tmp) {
HXLINE( 832)					if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 834)						this->lightningStrikeShit();
            					}
            				}
HXLINE( 830)				goto _hx_goto_25;
            			}
            			if (  (_hx_switch_0==HX_("limo",1f,17,b3,47)) ){
HXLINE( 844)				if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
            					HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            					void _hx_run( ::BackgroundDancer dancer){
            						HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_848_beatHit)
HXLINE( 848)						dancer->dance();
            					}
            					HX_END_LOCAL_FUNC1((void))

HXLINE( 846)					( ( ::flixel::group::FlxTypedGroup)(this->swagGroup->get(HX_("grpLimoDancers",70,18,93,51))) )->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 851)					bool _hx_tmp;
HXDLIN( 851)					if ((::flixel::FlxG_obj::random->_hx_float(0,100,null()) < 10)) {
HXLINE( 851)						_hx_tmp = this->fastCarCanDrive;
            					}
            					else {
HXLINE( 851)						_hx_tmp = false;
            					}
HXDLIN( 851)					if (_hx_tmp) {
HXLINE( 852)						this->fastCarDrive();
            					}
            				}
HXLINE( 844)				goto _hx_goto_25;
            			}
            			if (  (_hx_switch_0==HX_("philly",28,77,5e,ef)) ){
HXLINE( 855)				if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 857)					if (!(this->trainMoving)) {
HXLINE( 858)						 ::Stage _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 858)						_hx_tmp->trainCooldown = (_hx_tmp->trainCooldown + 1);
            					}
HXLINE( 860)					if ((::hx::Mod(this->curBeat,4) == 0)) {
            						HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            						void _hx_run( ::flixel::FlxSprite light){
            							HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_865_beatHit)
HXLINE( 865)							light->set_visible(false);
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE( 862)						 ::flixel::group::FlxTypedGroup phillyCityLights = ( ( ::flixel::group::FlxTypedGroup)(this->swagGroup->get(HX_("phillyCityLights",30,e0,12,1f))) );
HXLINE( 863)						phillyCityLights->forEach( ::Dynamic(new _hx_Closure_1()),null());
HXLINE( 868)						this->curLight = ::flixel::FlxG_obj::random->_hx_int(0,(phillyCityLights->length - 1),null());
HXLINE( 870)						phillyCityLights->members->__get(this->curLight)->__SetField(HX_("visible",72,78,24,a3),true,::hx::paccDynamic);
            					}
            				}
HXLINE( 875)				bool _hx_tmp;
HXDLIN( 875)				bool _hx_tmp1;
HXDLIN( 875)				bool _hx_tmp2;
HXDLIN( 875)				if ((::hx::Mod(this->curBeat,8) == 4)) {
HXLINE( 875)					Float Chance;
HXDLIN( 875)					if ((::Conductor_obj::bpm > 320)) {
HXLINE( 875)						Chance = ( (Float)(150) );
            					}
            					else {
HXLINE( 875)						Chance = ( (Float)(30) );
            					}
HXDLIN( 875)					_hx_tmp2 = (::flixel::FlxG_obj::random->_hx_float(0,100,null()) < Chance);
            				}
            				else {
HXLINE( 875)					_hx_tmp2 = false;
            				}
HXDLIN( 875)				if (_hx_tmp2) {
HXLINE( 875)					_hx_tmp1 = !(this->trainMoving);
            				}
            				else {
HXLINE( 875)					_hx_tmp1 = false;
            				}
HXDLIN( 875)				if (_hx_tmp1) {
HXLINE( 875)					_hx_tmp = (this->trainCooldown > 8);
            				}
            				else {
HXLINE( 875)					_hx_tmp = false;
            				}
HXDLIN( 875)				if (_hx_tmp) {
HXLINE( 877)					if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 879)						this->trainCooldown = ::flixel::FlxG_obj::random->_hx_int(-4,0,null());
HXLINE( 880)						this->trainStart();
            					}
            				}
HXLINE( 854)				goto _hx_goto_25;
            			}
            			if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 839)				if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 841)					this->swagBacks->get(HX_("bgGirls",92,16,2b,41))->__Field(HX_("dance",33,83,83,d4),::hx::paccDynamic)();
            				}
HXLINE( 839)				goto _hx_goto_25;
            			}
            			_hx_goto_25:;
            		}
            	}


void Stage_obj::lightningStrikeShit(){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_894_lightningStrikeShit)
HXLINE( 895)		 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 895)		_hx_tmp->play(::Paths_obj::sound((HX_("thunder_",bb,58,cf,2f) + ::flixel::FlxG_obj::random->_hx_int(1,2,null())),HX_("shared",a5,5e,2b,1d)),null(),null(),null(),null(),null());
HXLINE( 896)		 ::Dynamic(this->swagBacks->get(HX_("halloweenBG",92,b2,88,5c))->__Field(HX_("animation",04,ef,34,4b),::hx::paccDynamic))->__Field(HX_("play",f4,2d,5a,4a),::hx::paccDynamic)(HX_("lightning",0a,39,4a,d7));
HXLINE( 898)		this->lightningStrikeBeat = this->curBeat;
HXLINE( 899)		this->lightningOffset = ::flixel::FlxG_obj::random->_hx_int(8,24,null());
HXLINE( 901)		if (::hx::IsNotNull( ::PlayState_obj::boyfriend )) {
HXLINE( 903)			::PlayState_obj::boyfriend->playAnim(HX_("scared",20,78,2a,3c),true,null(),null());
HXLINE( 904)			::PlayState_obj::gf->playAnim(HX_("scared",20,78,2a,3c),true,null(),null());
            		}
            		else {
HXLINE( 908)			::GameplayCustomizeState_obj::boyfriend->playAnim(HX_("scared",20,78,2a,3c),true,null(),null());
HXLINE( 909)			::GameplayCustomizeState_obj::gf->playAnim(HX_("scared",20,78,2a,3c),true,null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,lightningStrikeShit,(void))

void Stage_obj::trainStart(){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_923_trainStart)
HXDLIN( 923)		if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 925)			this->trainMoving = true;
HXLINE( 926)			this->trainSound->play(true,null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,trainStart,(void))

void Stage_obj::updateTrainPos(){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_934_updateTrainPos)
HXDLIN( 934)		if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 936)			if ((this->trainSound->_time >= 4700)) {
HXLINE( 938)				this->startedMoving = true;
HXLINE( 940)				if (::hx::IsNotNull( ::PlayState_obj::gf )) {
HXLINE( 941)					::PlayState_obj::gf->playAnim(HX_("hairBlow",b4,c9,39,c9),null(),null(),null());
            				}
            				else {
HXLINE( 943)					::GameplayCustomizeState_obj::gf->playAnim(HX_("hairBlow",b4,c9,39,c9),null(),null(),null());
            				}
            			}
HXLINE( 946)			if (this->startedMoving) {
HXLINE( 948)				 ::Dynamic phillyTrain = this->swagBacks->get(HX_("phillyTrain",80,9b,65,bb));
HXLINE( 949)				 ::Dynamic phillyTrain1 = phillyTrain;
HXDLIN( 949)				phillyTrain1->__SetField(HX_("x",78,00,00,00),( ::Dynamic(phillyTrain1->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) - 400),::hx::paccDynamic);
HXLINE( 951)				bool _hx_tmp;
HXDLIN( 951)				if (::hx::IsLess( phillyTrain->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),-2000 )) {
HXLINE( 951)					_hx_tmp = !(this->trainFinishing);
            				}
            				else {
HXLINE( 951)					_hx_tmp = false;
            				}
HXDLIN( 951)				if (_hx_tmp) {
HXLINE( 953)					phillyTrain->__SetField(HX_("x",78,00,00,00),-1150,::hx::paccDynamic);
HXLINE( 954)					 ::Stage _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 954)					_hx_tmp->trainCars = (_hx_tmp->trainCars - 1);
HXLINE( 956)					if ((this->trainCars <= 0)) {
HXLINE( 957)						this->trainFinishing = true;
            					}
            				}
HXLINE( 960)				bool _hx_tmp1;
HXDLIN( 960)				if (::hx::IsLess( phillyTrain->__Field(HX_("x",78,00,00,00),::hx::paccDynamic),-4000 )) {
HXLINE( 960)					_hx_tmp1 = this->trainFinishing;
            				}
            				else {
HXLINE( 960)					_hx_tmp1 = false;
            				}
HXDLIN( 960)				if (_hx_tmp1) {
HXLINE( 961)					this->trainReset();
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,updateTrainPos,(void))

void Stage_obj::trainReset(){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_968_trainReset)
HXDLIN( 968)		if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 970)			if (::hx::IsNotNull( ::PlayState_obj::gf )) {
HXLINE( 971)				::PlayState_obj::gf->playAnim(HX_("hairFall",bd,48,d6,cb),null(),null(),null());
            			}
            			else {
HXLINE( 973)				::GameplayCustomizeState_obj::gf->playAnim(HX_("hairFall",bd,48,d6,cb),null(),null(),null());
            			}
HXLINE( 975)			this->swagBacks->get(HX_("phillyTrain",80,9b,65,bb))->__SetField(HX_("x",78,00,00,00),(::flixel::FlxG_obj::width + 200),::hx::paccDynamic);
HXLINE( 976)			this->trainMoving = false;
HXLINE( 979)			this->trainCars = 8;
HXLINE( 980)			this->trainFinishing = false;
HXLINE( 981)			this->startedMoving = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,trainReset,(void))

void Stage_obj::resetFastCar(){
            	HX_STACKFRAME(&_hx_pos_7b29f2b73a08853e_989_resetFastCar)
HXDLIN( 989)		if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
HXLINE( 991)			 ::Dynamic fastCar = this->swagBacks->get(HX_("fastCar",d8,f2,1f,de));
HXLINE( 992)			fastCar->__SetField(HX_("x",78,00,00,00),-12600,::hx::paccDynamic);
HXLINE( 993)			fastCar->__SetField(HX_("y",79,00,00,00),::flixel::FlxG_obj::random->_hx_int(140,250,null()),::hx::paccDynamic);
HXLINE( 994)			 ::Dynamic(fastCar->__Field(HX_("velocity",1d,02,fe,1e),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),0,::hx::paccDynamic);
HXLINE( 995)			fastCar->__SetField(HX_("visible",72,78,24,a3),false,::hx::paccDynamic);
HXLINE( 996)			this->fastCarCanDrive = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,resetFastCar,(void))

void Stage_obj::fastCarDrive(){
            	HX_GC_STACKFRAME(&_hx_pos_7b29f2b73a08853e_1001_fastCarDrive)
HXLINE(1000)		 ::Stage _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(1002)		if (( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("distractions",31,13,7d,60),::hx::paccDynamic)) )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::Stage,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_7b29f2b73a08853e_1011_fastCarDrive)
HXLINE(1011)				_gthis->resetFastCar();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(1004)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN(1004)			_hx_tmp->play(::Paths_obj::sound((HX_("carPass",05,1f,44,b6) + ::flixel::FlxG_obj::random->_hx_int(0,1,null())),HX_("shared",a5,5e,2b,1d)),((Float)0.7),null(),null(),null(),null());
HXLINE(1006)			this->swagBacks->get(HX_("fastCar",d8,f2,1f,de))->__SetField(HX_("visible",72,78,24,a3),true,::hx::paccDynamic);
HXLINE(1007)			 ::Dynamic _hx_tmp1 = this->swagBacks->get(HX_("fastCar",d8,f2,1f,de));
HXDLIN(1007)			int _hx_tmp2 = ::flixel::FlxG_obj::random->_hx_int(170,220,null());
HXDLIN(1007)			 ::Dynamic(_hx_tmp1->__Field(HX_("velocity",1d,02,fe,1e),::hx::paccDynamic))->__SetField(HX_("x",78,00,00,00),((( (Float)(_hx_tmp2) ) / ::flixel::FlxG_obj::elapsed) * ( (Float)(3) )),::hx::paccDynamic);
HXLINE(1008)			this->fastCarCanDrive = false;
HXLINE(1009)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(2, ::Dynamic(new _hx_Closure_0(_gthis)),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,fastCarDrive,(void))


::hx::ObjectPtr< Stage_obj > Stage_obj::__new(::String daStage) {
	::hx::ObjectPtr< Stage_obj > __this = new Stage_obj();
	__this->__construct(daStage);
	return __this;
}

::hx::ObjectPtr< Stage_obj > Stage_obj::__alloc(::hx::Ctx *_hx_ctx,::String daStage) {
	Stage_obj *__this = (Stage_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Stage_obj), true, "Stage"));
	*(void **)__this = Stage_obj::_hx_vtable;
	__this->__construct(daStage);
	return __this;
}

Stage_obj::Stage_obj()
{
}

void Stage_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Stage);
	HX_MARK_MEMBER_NAME(curStage,"curStage");
	HX_MARK_MEMBER_NAME(camZoom,"camZoom");
	HX_MARK_MEMBER_NAME(hideLastBG,"hideLastBG");
	HX_MARK_MEMBER_NAME(tweenDuration,"tweenDuration");
	HX_MARK_MEMBER_NAME(toAdd,"toAdd");
	HX_MARK_MEMBER_NAME(swagBacks,"swagBacks");
	HX_MARK_MEMBER_NAME(swagGroup,"swagGroup");
	HX_MARK_MEMBER_NAME(animatedBacks,"animatedBacks");
	HX_MARK_MEMBER_NAME(layInFront,"layInFront");
	HX_MARK_MEMBER_NAME(slowBacks,"slowBacks");
	HX_MARK_MEMBER_NAME(positions,"positions");
	HX_MARK_MEMBER_NAME(lightningStrikeBeat,"lightningStrikeBeat");
	HX_MARK_MEMBER_NAME(lightningOffset,"lightningOffset");
	HX_MARK_MEMBER_NAME(curLight,"curLight");
	HX_MARK_MEMBER_NAME(trainMoving,"trainMoving");
	HX_MARK_MEMBER_NAME(trainFrameTiming,"trainFrameTiming");
	HX_MARK_MEMBER_NAME(trainCars,"trainCars");
	HX_MARK_MEMBER_NAME(trainFinishing,"trainFinishing");
	HX_MARK_MEMBER_NAME(trainCooldown,"trainCooldown");
	HX_MARK_MEMBER_NAME(trainSound,"trainSound");
	HX_MARK_MEMBER_NAME(startedMoving,"startedMoving");
	HX_MARK_MEMBER_NAME(fastCarCanDrive,"fastCarCanDrive");
	 ::MusicBeatState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Stage_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(curStage,"curStage");
	HX_VISIT_MEMBER_NAME(camZoom,"camZoom");
	HX_VISIT_MEMBER_NAME(hideLastBG,"hideLastBG");
	HX_VISIT_MEMBER_NAME(tweenDuration,"tweenDuration");
	HX_VISIT_MEMBER_NAME(toAdd,"toAdd");
	HX_VISIT_MEMBER_NAME(swagBacks,"swagBacks");
	HX_VISIT_MEMBER_NAME(swagGroup,"swagGroup");
	HX_VISIT_MEMBER_NAME(animatedBacks,"animatedBacks");
	HX_VISIT_MEMBER_NAME(layInFront,"layInFront");
	HX_VISIT_MEMBER_NAME(slowBacks,"slowBacks");
	HX_VISIT_MEMBER_NAME(positions,"positions");
	HX_VISIT_MEMBER_NAME(lightningStrikeBeat,"lightningStrikeBeat");
	HX_VISIT_MEMBER_NAME(lightningOffset,"lightningOffset");
	HX_VISIT_MEMBER_NAME(curLight,"curLight");
	HX_VISIT_MEMBER_NAME(trainMoving,"trainMoving");
	HX_VISIT_MEMBER_NAME(trainFrameTiming,"trainFrameTiming");
	HX_VISIT_MEMBER_NAME(trainCars,"trainCars");
	HX_VISIT_MEMBER_NAME(trainFinishing,"trainFinishing");
	HX_VISIT_MEMBER_NAME(trainCooldown,"trainCooldown");
	HX_VISIT_MEMBER_NAME(trainSound,"trainSound");
	HX_VISIT_MEMBER_NAME(startedMoving,"startedMoving");
	HX_VISIT_MEMBER_NAME(fastCarCanDrive,"fastCarCanDrive");
	 ::MusicBeatState_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Stage_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"toAdd") ) { return ::hx::Val( toAdd ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"camZoom") ) { return ::hx::Val( camZoom ); }
		if (HX_FIELD_EQ(inName,"stepHit") ) { return ::hx::Val( stepHit_dyn() ); }
		if (HX_FIELD_EQ(inName,"beatHit") ) { return ::hx::Val( beatHit_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"curStage") ) { return ::hx::Val( curStage ); }
		if (HX_FIELD_EQ(inName,"curLight") ) { return ::hx::Val( curLight ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"swagBacks") ) { return ::hx::Val( swagBacks ); }
		if (HX_FIELD_EQ(inName,"swagGroup") ) { return ::hx::Val( swagGroup ); }
		if (HX_FIELD_EQ(inName,"slowBacks") ) { return ::hx::Val( slowBacks ); }
		if (HX_FIELD_EQ(inName,"positions") ) { return ::hx::Val( positions ); }
		if (HX_FIELD_EQ(inName,"trainCars") ) { return ::hx::Val( trainCars ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"hideLastBG") ) { return ::hx::Val( hideLastBG ); }
		if (HX_FIELD_EQ(inName,"layInFront") ) { return ::hx::Val( layInFront ); }
		if (HX_FIELD_EQ(inName,"trainSound") ) { return ::hx::Val( trainSound ); }
		if (HX_FIELD_EQ(inName,"trainStart") ) { return ::hx::Val( trainStart_dyn() ); }
		if (HX_FIELD_EQ(inName,"trainReset") ) { return ::hx::Val( trainReset_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"trainMoving") ) { return ::hx::Val( trainMoving ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"resetFastCar") ) { return ::hx::Val( resetFastCar_dyn() ); }
		if (HX_FIELD_EQ(inName,"fastCarDrive") ) { return ::hx::Val( fastCarDrive_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"tweenDuration") ) { return ::hx::Val( tweenDuration ); }
		if (HX_FIELD_EQ(inName,"animatedBacks") ) { return ::hx::Val( animatedBacks ); }
		if (HX_FIELD_EQ(inName,"trainCooldown") ) { return ::hx::Val( trainCooldown ); }
		if (HX_FIELD_EQ(inName,"startedMoving") ) { return ::hx::Val( startedMoving ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"trainFinishing") ) { return ::hx::Val( trainFinishing ); }
		if (HX_FIELD_EQ(inName,"updateTrainPos") ) { return ::hx::Val( updateTrainPos_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"lightningOffset") ) { return ::hx::Val( lightningOffset ); }
		if (HX_FIELD_EQ(inName,"fastCarCanDrive") ) { return ::hx::Val( fastCarCanDrive ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"trainFrameTiming") ) { return ::hx::Val( trainFrameTiming ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"lightningStrikeBeat") ) { return ::hx::Val( lightningStrikeBeat ); }
		if (HX_FIELD_EQ(inName,"lightningStrikeShit") ) { return ::hx::Val( lightningStrikeShit_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Stage_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"toAdd") ) { toAdd=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"camZoom") ) { camZoom=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"curStage") ) { curStage=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"curLight") ) { curLight=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"swagBacks") ) { swagBacks=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"swagGroup") ) { swagGroup=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"slowBacks") ) { slowBacks=inValue.Cast<  ::haxe::ds::IntMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"positions") ) { positions=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trainCars") ) { trainCars=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"hideLastBG") ) { hideLastBG=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"layInFront") ) { layInFront=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trainSound") ) { trainSound=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"trainMoving") ) { trainMoving=inValue.Cast< bool >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"tweenDuration") ) { tweenDuration=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"animatedBacks") ) { animatedBacks=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trainCooldown") ) { trainCooldown=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"startedMoving") ) { startedMoving=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"trainFinishing") ) { trainFinishing=inValue.Cast< bool >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"lightningOffset") ) { lightningOffset=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"fastCarCanDrive") ) { fastCarCanDrive=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"trainFrameTiming") ) { trainFrameTiming=inValue.Cast< Float >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"lightningStrikeBeat") ) { lightningStrikeBeat=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Stage_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("curStage",1e,65,b9,cb));
	outFields->push(HX_("camZoom",c2,f6,e9,db));
	outFields->push(HX_("hideLastBG",fd,ab,4a,ec));
	outFields->push(HX_("tweenDuration",df,58,51,72));
	outFields->push(HX_("toAdd",66,a3,0b,14));
	outFields->push(HX_("swagBacks",82,d9,24,8a));
	outFields->push(HX_("swagGroup",55,84,6b,76));
	outFields->push(HX_("animatedBacks",c9,96,f7,e5));
	outFields->push(HX_("layInFront",80,62,57,86));
	outFields->push(HX_("slowBacks",ab,36,dc,c0));
	outFields->push(HX_("positions",aa,f3,51,d0));
	outFields->push(HX_("lightningStrikeBeat",72,e2,3d,b6));
	outFields->push(HX_("lightningOffset",3d,a8,e5,e6));
	outFields->push(HX_("curLight",36,8b,aa,bc));
	outFields->push(HX_("trainMoving",76,00,99,48));
	outFields->push(HX_("trainFrameTiming",af,67,10,1b));
	outFields->push(HX_("trainCars",c7,61,9c,4d));
	outFields->push(HX_("trainFinishing",87,15,8c,24));
	outFields->push(HX_("trainCooldown",93,a3,58,0c));
	outFields->push(HX_("trainSound",e7,b3,e5,da));
	outFields->push(HX_("startedMoving",af,76,97,fb));
	outFields->push(HX_("fastCarCanDrive",d2,f1,13,ee));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Stage_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(Stage_obj,curStage),HX_("curStage",1e,65,b9,cb)},
	{::hx::fsFloat,(int)offsetof(Stage_obj,camZoom),HX_("camZoom",c2,f6,e9,db)},
	{::hx::fsBool,(int)offsetof(Stage_obj,hideLastBG),HX_("hideLastBG",fd,ab,4a,ec)},
	{::hx::fsFloat,(int)offsetof(Stage_obj,tweenDuration),HX_("tweenDuration",df,58,51,72)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(Stage_obj,toAdd),HX_("toAdd",66,a3,0b,14)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Stage_obj,swagBacks),HX_("swagBacks",82,d9,24,8a)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Stage_obj,swagGroup),HX_("swagGroup",55,84,6b,76)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Stage_obj,animatedBacks),HX_("animatedBacks",c9,96,f7,e5)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Stage_obj,layInFront),HX_("layInFront",80,62,57,86)},
	{::hx::fsObject /*  ::haxe::ds::IntMap */ ,(int)offsetof(Stage_obj,slowBacks),HX_("slowBacks",ab,36,dc,c0)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Stage_obj,positions),HX_("positions",aa,f3,51,d0)},
	{::hx::fsInt,(int)offsetof(Stage_obj,lightningStrikeBeat),HX_("lightningStrikeBeat",72,e2,3d,b6)},
	{::hx::fsInt,(int)offsetof(Stage_obj,lightningOffset),HX_("lightningOffset",3d,a8,e5,e6)},
	{::hx::fsInt,(int)offsetof(Stage_obj,curLight),HX_("curLight",36,8b,aa,bc)},
	{::hx::fsBool,(int)offsetof(Stage_obj,trainMoving),HX_("trainMoving",76,00,99,48)},
	{::hx::fsFloat,(int)offsetof(Stage_obj,trainFrameTiming),HX_("trainFrameTiming",af,67,10,1b)},
	{::hx::fsInt,(int)offsetof(Stage_obj,trainCars),HX_("trainCars",c7,61,9c,4d)},
	{::hx::fsBool,(int)offsetof(Stage_obj,trainFinishing),HX_("trainFinishing",87,15,8c,24)},
	{::hx::fsInt,(int)offsetof(Stage_obj,trainCooldown),HX_("trainCooldown",93,a3,58,0c)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(Stage_obj,trainSound),HX_("trainSound",e7,b3,e5,da)},
	{::hx::fsBool,(int)offsetof(Stage_obj,startedMoving),HX_("startedMoving",af,76,97,fb)},
	{::hx::fsBool,(int)offsetof(Stage_obj,fastCarCanDrive),HX_("fastCarCanDrive",d2,f1,13,ee)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Stage_obj_sStaticStorageInfo = 0;
#endif

static ::String Stage_obj_sMemberFields[] = {
	HX_("curStage",1e,65,b9,cb),
	HX_("camZoom",c2,f6,e9,db),
	HX_("hideLastBG",fd,ab,4a,ec),
	HX_("tweenDuration",df,58,51,72),
	HX_("toAdd",66,a3,0b,14),
	HX_("swagBacks",82,d9,24,8a),
	HX_("swagGroup",55,84,6b,76),
	HX_("animatedBacks",c9,96,f7,e5),
	HX_("layInFront",80,62,57,86),
	HX_("slowBacks",ab,36,dc,c0),
	HX_("positions",aa,f3,51,d0),
	HX_("update",09,86,05,87),
	HX_("stepHit",67,ae,41,81),
	HX_("beatHit",7d,ea,04,74),
	HX_("lightningStrikeBeat",72,e2,3d,b6),
	HX_("lightningOffset",3d,a8,e5,e6),
	HX_("curLight",36,8b,aa,bc),
	HX_("lightningStrikeShit",bc,d0,7c,c1),
	HX_("trainMoving",76,00,99,48),
	HX_("trainFrameTiming",af,67,10,1b),
	HX_("trainCars",c7,61,9c,4d),
	HX_("trainFinishing",87,15,8c,24),
	HX_("trainCooldown",93,a3,58,0c),
	HX_("trainSound",e7,b3,e5,da),
	HX_("trainStart",7a,9b,24,de),
	HX_("startedMoving",af,76,97,fb),
	HX_("updateTrainPos",d5,01,38,2b),
	HX_("trainReset",e7,70,e1,40),
	HX_("fastCarCanDrive",d2,f1,13,ee),
	HX_("resetFastCar",c9,38,fe,4f),
	HX_("fastCarDrive",12,97,d2,be),
	::String(null()) };

::hx::Class Stage_obj::__mClass;

void Stage_obj::__register()
{
	Stage_obj _hx_dummy;
	Stage_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Stage",9e,da,38,17);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Stage_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Stage_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Stage_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Stage_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

