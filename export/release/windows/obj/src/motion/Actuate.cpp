// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_motion_Actuate
#include <motion/Actuate.h>
#endif
#ifndef INCLUDED_motion_actuators_GenericActuator
#include <motion/actuators/GenericActuator.h>
#endif
#ifndef INCLUDED_motion_actuators_IGenericActuator
#include <motion/actuators/IGenericActuator.h>
#endif
#ifndef INCLUDED_motion_easing_Expo
#include <motion/easing/Expo.h>
#endif
#ifndef INCLUDED_motion_easing_IEasing
#include <motion/easing/IEasing.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_113fc4785685f161_450_unload,"motion.Actuate","unload",0x7ce9fdd6,"motion.Actuate.unload","motion/Actuate.hx",450,0xcac92ba8)
HX_LOCAL_STACK_FRAME(_hx_pos_113fc4785685f161_25_boot,"motion.Actuate","boot",0xa66b2d49,"motion.Actuate.boot","motion/Actuate.hx",25,0xcac92ba8)
HX_LOCAL_STACK_FRAME(_hx_pos_113fc4785685f161_26_boot,"motion.Actuate","boot",0xa66b2d49,"motion.Actuate.boot","motion/Actuate.hx",26,0xcac92ba8)
namespace motion{

void Actuate_obj::__construct() { }

Dynamic Actuate_obj::__CreateEmpty() { return new Actuate_obj; }

void *Actuate_obj::_hx_vtable = 0;

Dynamic Actuate_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Actuate_obj > _hx_result = new Actuate_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Actuate_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x12334cb1;
}

::Dynamic Actuate_obj::defaultEase;

 ::haxe::ds::ObjectMap Actuate_obj::targetLibraries;

void Actuate_obj::unload( ::motion::actuators::GenericActuator actuator){
            	HX_STACKFRAME(&_hx_pos_113fc4785685f161_450_unload)
HXLINE( 452)		 ::Dynamic target = actuator->target;
HXLINE( 476)		if (::motion::Actuate_obj::targetLibraries->exists(target)) {
HXLINE( 478)			( (::Array< ::Dynamic>)(::motion::Actuate_obj::targetLibraries->get(target)) )->remove(actuator);
HXLINE( 480)			if ((( (::Array< ::Dynamic>)(::motion::Actuate_obj::targetLibraries->get(target)) )->length == 0)) {
HXLINE( 482)				::motion::Actuate_obj::targetLibraries->remove(target);
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Actuate_obj,unload,(void))


Actuate_obj::Actuate_obj()
{
}

bool Actuate_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"unload") ) { outValue = unload_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"defaultEase") ) { outValue = ( defaultEase ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"targetLibraries") ) { outValue = ( targetLibraries ); return true; }
	}
	return false;
}

bool Actuate_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"defaultEase") ) { defaultEase=ioValue.Cast< ::Dynamic >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"targetLibraries") ) { targetLibraries=ioValue.Cast<  ::haxe::ds::ObjectMap >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Actuate_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Actuate_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Dynamic */ ,(void *) &Actuate_obj::defaultEase,HX_("defaultEase",4f,85,cb,14)},
	{::hx::fsObject /*  ::haxe::ds::ObjectMap */ ,(void *) &Actuate_obj::targetLibraries,HX_("targetLibraries",88,ca,b7,7d)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Actuate_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Actuate_obj::defaultEase,"defaultEase");
	HX_MARK_MEMBER_NAME(Actuate_obj::targetLibraries,"targetLibraries");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Actuate_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Actuate_obj::defaultEase,"defaultEase");
	HX_VISIT_MEMBER_NAME(Actuate_obj::targetLibraries,"targetLibraries");
};

#endif

::hx::Class Actuate_obj::__mClass;

static ::String Actuate_obj_sStaticFields[] = {
	HX_("defaultEase",4f,85,cb,14),
	HX_("targetLibraries",88,ca,b7,7d),
	HX_("unload",ff,a0,8c,65),
	::String(null())
};

void Actuate_obj::__register()
{
	Actuate_obj _hx_dummy;
	Actuate_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("motion.Actuate",b7,4e,b3,4f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Actuate_obj::__GetStatic;
	__mClass->mSetStaticField = &Actuate_obj::__SetStatic;
	__mClass->mMarkFunc = Actuate_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Actuate_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Actuate_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Actuate_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Actuate_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Actuate_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Actuate_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_113fc4785685f161_25_boot)
HXDLIN(  25)		defaultEase = ::motion::easing::Expo_obj::easeOut;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_113fc4785685f161_26_boot)
HXDLIN(  26)		targetLibraries =  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
            	}
}

} // end namespace motion
