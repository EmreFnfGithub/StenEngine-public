// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_options_AppearanceSub
#include <options/AppearanceSub.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b32239e9822df2d8_42_new,"options.AppearanceSub","new",0xf9a9bfbe,"options.AppearanceSub.new","options/AppearanceSub.hx",42,0x89cfd373)
namespace options{

void AppearanceSub_obj::__construct( ::Dynamic BGColor){
            	HX_STACKFRAME(&_hx_pos_b32239e9822df2d8_42_new)
HXDLIN(  42)		super::__construct(BGColor);
            	}

Dynamic AppearanceSub_obj::__CreateEmpty() { return new AppearanceSub_obj; }

void *AppearanceSub_obj::_hx_vtable = 0;

Dynamic AppearanceSub_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AppearanceSub_obj > _hx_result = new AppearanceSub_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool AppearanceSub_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x5661ffbf) {
			if (inClassId<=(int)0x1cd95ca2) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x1cd95ca2;
			} else {
				return inClassId==(int)0x5661ffbf;
			}
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		return inClassId==(int)0x7c795c9f || inClassId==(int)0x7ccf8994;
	}
}


::hx::ObjectPtr< AppearanceSub_obj > AppearanceSub_obj::__new( ::Dynamic BGColor) {
	::hx::ObjectPtr< AppearanceSub_obj > __this = new AppearanceSub_obj();
	__this->__construct(BGColor);
	return __this;
}

::hx::ObjectPtr< AppearanceSub_obj > AppearanceSub_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic BGColor) {
	AppearanceSub_obj *__this = (AppearanceSub_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AppearanceSub_obj), true, "options.AppearanceSub"));
	*(void **)__this = AppearanceSub_obj::_hx_vtable;
	__this->__construct(BGColor);
	return __this;
}

AppearanceSub_obj::AppearanceSub_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *AppearanceSub_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *AppearanceSub_obj_sStaticStorageInfo = 0;
#endif

::hx::Class AppearanceSub_obj::__mClass;

void AppearanceSub_obj::__register()
{
	AppearanceSub_obj _hx_dummy;
	AppearanceSub_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("options.AppearanceSub",cc,c8,ab,8f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< AppearanceSub_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AppearanceSub_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AppearanceSub_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace options
